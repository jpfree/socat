name: Build socat for MIPSel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository (optional, if you want to include additional files)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up QEMU for MIPSel
      - name: Set up QEMU for MIPSel
        uses: docker/setup-qemu-action@v3
        with:
          platforms: mipsel

      # Download socat source code
      - name: Download socat source
        run: |
          wget http://www.dest-unreach.org/socat/download/socat-1.8.0.3.tar.gz
          tar -xzf socat-1.8.0.3.tar.gz
          mv socat-1.8.0.3 socat-source

      # Build socat for MIPSel using a Docker container with cross-compiler
      - name: Build socat for MIPSel
        run: |
          docker run --rm -v $(pwd)/socat-source:/socat-source -w /socat-source \
            multiarch/crossbuild \
            /bin/bash -c "\
              echo 'deb http://archive.debian.org/debian stretch main' > /etc/apt/sources.list && \
              echo 'deb http://archive.debian.org/debian-security stretch/updates main' >> /etc/apt/sources.list && \
              apt-get update && \
              apt-get install -y build-essential && \
              ./configure --host=mipsel-linux-gnu CC=mipsel-linux-gnu-gcc CFLAGS='-O2 -march=mips32' && \
              make && \
              mipsel-linux-gnu-strip socat"
          mv socat-source/socat .

      # Upload the compiled binary as an artifact
      - name: Upload socat binary
        uses: actions/upload-artifact@v4
        with:
          name: socat-mipsel-binary
          path: socat
          retention-days: 5
